{"version":3,"sources":["components/Note.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","id","baseUrl","axios","get","then","response","data","newObject","post","put","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","setErrorMessage","notesToShow","filter","useEffect","notesServices","initialNotes","console","log","length","map","find","modifiedNote","returnedNote","catch","error","setTimeout","n","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qLAYeA,EAZF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UACjB,qBACA,iBAEF,OACA,qBAAkBC,UAAU,OAA5B,UACGJ,EAAKK,QACN,wBAAQC,QAASL,EAAjB,SAAoCC,MAF7BF,EAAKO,K,gBCJVC,EAAU,aAiBD,EAfA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAACC,GAAD,OAAcA,EAASC,SAa9B,EAVA,SAACC,GAEd,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAACC,GAAD,OAAcA,EAASC,SAQ9B,EALA,SAACC,EAAWP,GAEzB,OADgBE,IAAMO,IAAN,UAAaR,EAAb,YAAwBD,GAAMO,GAC/BH,MAAK,SAACC,GAAD,OAAcA,EAASC,SCgE9BI,EA3EH,WACV,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,iBAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAwCN,mBAAS,0BAAjD,mBAAqBO,GAArB,WAwCMC,EAAcH,EAAUJ,EAAQA,EAAMQ,QAAO,SAAC3B,GAAD,OAAUA,EAAKG,aAOlE,OALAyB,qBAAU,WACRC,IAAuBlB,MAAK,SAACmB,GAAD,OAAkBV,EAASU,QACtD,IAEHC,QAAQC,IAAI,SAAUb,EAAMc,OAAQ,UAElC,oCACE,uCACA,8BACE,yBAAQ3B,QAAS,kBAAMkB,GAAYD,IAAnC,kBACQA,EAAU,YAAc,WAGlC,6BACGG,EAAYQ,KAAI,SAAClC,GAAD,OACf,cAAC,EAAD,CACEA,KAAMA,EACNC,iBAAkB,kBAvCD,SAACM,GAC1B,IAAMP,EAAOmB,EAAMgB,MAAK,SAACnC,GAAD,OAAUA,EAAKO,KAAOA,KACxC6B,EAAY,2BAAQpC,GAAR,IAAcG,WAAYH,EAAKG,YAEjD0B,EACUO,EAAcpC,EAAKO,IAC1BI,MAAK,SAAC0B,GAAD,OACJjB,EAASD,EAAMe,KAAI,SAAClC,GAAD,OAAWA,EAAKO,KAAOA,EAAKP,EAAOqC,SAEvDC,OAAM,SAACC,GACNd,EAAgB,aAAD,OACAzB,EAAKK,QADL,sCAGfmC,YAAW,WACTf,EAAgB,QACf,KACHL,EAASD,EAAMQ,QAAO,SAACc,GAAD,OAAOA,EAAElC,KAAOA,SAuBVmC,CAAmB1C,EAAKO,YAItD,uBAAMoC,SA7DM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBzC,QAASgB,EACT0B,MAAM,IAAIC,MAAOC,cACjB9C,UAAW+C,KAAKC,SAAW,IAG7BtB,EAAqBiB,GAAYnC,MAAK,SAAC0B,GACrCjB,EAASD,EAAMiC,OAAOf,IACtBf,EAAW,QAmDX,UACE,uBAAO+B,MAAOhC,EAASiC,SAhDJ,SAACV,GACxBtB,EAAWsB,EAAMW,OAAOF,UAgDpB,wBAAQG,KAAK,SAAb,yB,MCrERC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1079ddb1.chunk.js","sourcesContent":["const Note = ({ note, toggleImportance }) => {\n  const label = note.important \n  ? \"make not important\"\n  : \"make important\"\n\n  return (\n  <li key={note.id} className=\"note\">\n    {note.content}\n    <button onClick={toggleImportance}>{label}</button>\n    </li>);\n};\n\nexport default Note;\n","import axios from \"axios\";\n\nconst baseUrl = \"/api/notes\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst update = (newObject, id) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nexport default {\n  getAll,\n  create,\n  update,\n};\n","import { useState, useEffect } from \"react\";\nimport Note from \"./components/Note\";\nimport Notification from \"./components/Notification\";\nimport notesServices from \"./services/notes\";\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"a new note...\");\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(\"some error happened...\");\n\n  const addNote = (event) => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n    };\n\n    notesServices.create(noteObject).then((returnedNote) => {\n      setNotes(notes.concat(returnedNote));\n      setNewNote(\"\");\n    });\n  };\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value);\n  };\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find((note) => note.id === id);\n    const modifiedNote = { ...note, important: !note.important };\n\n    notesServices\n      .update(modifiedNote, note.id)\n      .then((returnedNote) =>\n        setNotes(notes.map((note) => (note.id !== id ? note : returnedNote)))\n      )\n      .catch((error) => {\n        setErrorMessage(\n          `the note '${note.content}' was already deleted from server`\n        );\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n        setNotes(notes.filter((n) => n.id !== id));\n      });\n  };\n\n  const notesToShow = showAll ? notes : notes.filter((note) => note.important);\n\n  useEffect(() => {\n    notesServices.getAll().then((initialNotes) => setNotes(initialNotes));\n  }, []);\n\n  console.log(\"render\", notes.length, \"render\");\n  return (\n    <section>\n      <h1>Notes</h1>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? \"important\" : \"all\"}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note) => (\n          <Note\n            note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        ))}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">save</button>\n      </form>\n    </section>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}