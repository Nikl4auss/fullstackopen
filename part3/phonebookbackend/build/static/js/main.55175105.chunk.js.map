{"version":3,"sources":["components/AddContact.js","components/Filter.js","components/Number.js","components/Numbers.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["AddContact","newName","handleNameChange","newNumber","handleNumberChange","handleNewContacts","onSubmit","htmlFor","id","value","onChange","Filter","filterText","handleFilter","Number","person","key","removeContact","name","number","onClick","Numbers","personsToShow","map","i","baseUrl","axios","get","then","response","data","newObject","post","put","delete","Notification","message","notificationClass","className","App","useState","persons","setPersons","filteredPersons","setFilteredPersons","setNewName","setNewNumber","setFilterText","notificationMessage","setNotificationMessage","notificationID","setNotificationID","setNotificationClass","length","useEffect","personsServices","initialPersons","catch","error","console","log","event","target","newFilteredPersons","filter","toLowerCase","includes","preventDefault","contactToUpdate","find","window","confirm","updatedContact","contact","clearTimeout","setTimeout","updateContact","alert","returnContact","concat","result","returnedPersons","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.55175105.chunk.js","sourcesContent":["const AddContact = ({newName, handleNameChange, newNumber, handleNumberChange, handleNewContacts}) => {\n    return (\n        <>\n        <h2>Add a new Contact</h2>\n        <form onSubmit={handleNewContacts}>\n            <label htmlFor=\"name\">\n                Name:\n                <input id=\"name\" value={newName} onChange={handleNameChange} />\n            </label>\n            <br />\n            <br />\n            <label htmlFor=\"number\">\n                Number:\n                <input id=\"number\" value={newNumber} onChange={handleNumberChange} />\n            </label>\n            <button>add contact</button>\n        </form>\n      </>\n    )\n}\n\nexport default AddContact","const Filter = ({filterText, handleFilter}) => {\n    return (\n        <label htmlFor=\"filter\">\n        Filter shown with:\n        <input id=\"filter\" value={filterText} onChange={handleFilter} />\n      </label>\n    )\n}\n\nexport default Filter","const Number = ({person, key, removeContact}) => {\n    return (\n        <>\n        <p key={key}>{person.name} {person.number}</p>\n        <button onClick={() => removeContact(person.name, person.id)}>delete</button>\n        </>\n    )\n}\n\nexport default Number","import Number from \"./Number\"\n\nconst Numbers = ({personsToShow, removeContact}) => {\n    return (\n        <>\n        <h2>Numbers</h2>\n        {personsToShow.map((person, i) => (\n            <Number person={person} key={i} removeContact={removeContact}/>\n        ))}\n        </>\n    )\n}\n\nexport default Numbers","import axios from \"axios\";\n\nconst baseUrl = \"/api/contacts\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst add = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst update = (newObject, id) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then((response) => response);\n};\n\nexport default {\n  getAll,\n  add,\n  update,\n  remove,\n};\n","const Notification = ({message, notificationClass}) => {\n    if (message  === null){\n        return null\n    }\n\n    return (\n        <div className={notificationClass}>\n            {message}\n        </div>\n    )\n}\n\nexport default Notification","import { useState, useEffect } from \"react\";\nimport AddContact from \"./components/AddContact\";\nimport Filter from \"./components/Filter\";\nimport Numbers from \"./components/Numbers\";\nimport personsServices from \"./services/persons\"\nimport Notification from \"./components/Notification\";\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [filteredPersons, setFilteredPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filterText, setFilterText] = useState(\"\");\n  const [notificationMessage, setNotificationMessage] = useState(null)\n  const [notificationID, setNotificationID] = useState(null)\n  const [notificationClass, setNotificationClass] = useState(null)\n  const handleNameChange = (event) => setNewName(event.target.value);\n  const handleNumberChange = (event) => setNewNumber(event.target.value);\n  const handleFilter = (event) => {\n    setFilterText(event.target.value);\n    const newFilteredPersons = persons.filter((person) =>\n      person.name.toLowerCase().includes(event.target.value.toLowerCase())\n    );\n    console.log(newFilteredPersons);\n    setFilteredPersons(newFilteredPersons);\n  };\n\n  const addContact = () => {\n    const newContact = {\n      name: newName,\n      number: newNumber,\n    };\n\n      personsServices\n      .add(newContact)\n      .then(returnContact => {\n        setPersons(persons.concat(returnContact))\n        if(notificationID !== null){\n          clearTimeout(notificationID)\n        }\n        setNotificationMessage(`Added ${returnContact.name} to the contact list`)\n        setNotificationClass(\"success\")\n        setNotificationID(setTimeout(() => {\n          setNotificationMessage(null)\n          setNotificationID(null)\n          setNotificationClass(null)\n        }, 5000))\n        setNewName(\"\");\n        setNewNumber(\"\");\n    })\n        \n  };\n\n  const updateContact = (contactToUpdate) => {\n    const updatedContact = {\n      ...contactToUpdate,\n      number: newNumber\n    }\n\n    personsServices\n    .update(updatedContact, contactToUpdate.id)\n    .then(response => {\n      setPersons(persons.map(contact => contact.id !== contactToUpdate.id ? contact : response))\n    })\n    .catch(error => {\n      if(notificationID !== null){\n        clearTimeout(notificationID)\n      }\n      setNotificationMessage(`El contacto ${contactToUpdate.name} ya ha sido borrado`)\n      setNotificationClass(\"error\")\n      setNotificationID(setTimeout(() => {\n        setNotificationMessage(null)\n        setNotificationID(null)\n        setNotificationClass(null)\n      }, 5000))\n      setPersons(persons.filter(contact => contact.id !== contactToUpdate.id))\n    })\n  }\n\n  const removeContact = (name, id) => {\n    if(window.confirm(`You want to delete ${name}?`)){\n      personsServices\n      .remove(id)\n      .then(result =>\n        {\n        personsServices\n        .getAll()\n        .then(returnedPersons => setPersons(returnedPersons)) \n        window.alert('Contact Deleted')\n        }\n        )\n    }\n  }\n\n  const handleNewContacts = (event) => {\n    event.preventDefault()\n    const contactToUpdate = persons.find(person => person.name === newName)\n    if(contactToUpdate){\n      if(window.confirm(`${contactToUpdate.name} is already on your phonebook, you want to update the old number with this new one?`)){\n        updateContact(contactToUpdate)\n      }\n      else{\n        window.alert(\"Update aborted\")\n      }\n    }\n    else {\n      addContact()\n    }\n  }\n\n  const personsToShow =\n    filteredPersons.length === 0 ? persons : filteredPersons;\n\n\n  useEffect( () => {\n    personsServices\n    .getAll()\n    .then(initialPersons => setPersons(initialPersons))\n    .catch(error => console.log(\"fail\", error))\n  }, [])\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification message={notificationMessage} notificationClass={notificationClass} />\n      <Filter filterText={filterText} handleFilter={handleFilter} />\n\n      <AddContact newName={newName} handleNameChange={handleNameChange} newNumber={newNumber} handleNumberChange={handleNumberChange} handleNewContacts={handleNewContacts}/>\n\n      <Numbers personsToShow={personsToShow} removeContact={removeContact}/>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}